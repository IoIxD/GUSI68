%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Project	:	GUSI				-	Grand Unified Socket Interface
% File		:	GUSISfio.nw			-	Interface to the Sfio library
% Author	:	Matthias Neeracher
% Language	:	C++
% 
% $Log: GUSISfio.nw,v $
% Revision 1.6  2002/01/07 05:56:20  neeri
% Compatibility fixes for CodeWarrior Pro 7
%
% Revision 1.5  2000/06/12 04:20:59  neeri
% Introduce GUSI_*printf
%
% Revision 1.4  1999/08/26 05:45:08  neeri
% Fixes for literate edition of source code
%
% Revision 1.3  1999/06/30 07:42:07  neeri
% Getting ready to release 2.0b3
%
% Revision 1.2  1999/06/08 04:31:30  neeri
% Getting ready for 2.0b2
%
% Revision 1.1  1999/04/29 04:57:03  neeri
% Added Sfio Support
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\chapter{The Interface to the Sfio library}

This section interfaces GUSI to the Sfio library.
<<GUSISfio.h>>=
#ifndef _GUSISfio_
#define _GUSISfio_

#endif /* _GUSISfio_ */
@

<<GUSISfio.cp>>=
#ifdef __MWERKS__
#define _MSL_STDIO_H		1
#define _MSL_CSTDIO			1
#define _MSL_FILE_STRUC_H	1
#define _MSL_STDIO_POSIX_H	1
#else
#define __STDIO__	1
#endif

#include "GUSIInternal.h"
#include <sfhdr.h>
#include "GUSIBasics.h"
#include "GUSIDescriptor.h"

<<Implementation of internal GUSI functions for Sfio>>
@

\section{Implementation of internal GUSI functions for Sfio}

[[GUSISfioFlushClose]] was adapted from the Sfio internal [[_sfall]] function.
<<Implementation of internal GUSI functions for Sfio>>=
static int GUSISfioFlushClose(bool close)
{
	reg Sfpool_t	*p, *next;
	reg Sfio_t*	f;
	reg int		n, rv;
	reg int		nsync, count, loop;
#define MAXLOOP 3

	for(loop = 0; loop < MAXLOOP; ++loop)
	{	rv = nsync = count = 0;
		for(p = &_Sfpool; p; p = next)
		{	/* find the next legitimate pool */
			for(next = p->next; next; next = next->next)
				if(next->n_sf > 0)
					break;

			/* walk the streams for _Sfpool only */
			for(n = 0; n < ((p == &_Sfpool) ? p->n_sf : 1); ++n)
			{	count += 1;
				f = p->sf[n];

				if(f->flags&SF_STRING )
					goto did_sync;
				if(SFFROZEN(f))
					continue;
				if( (close ? sfclose(f) : sfsync(f)) < 0)
					rv = -1;

			did_sync:
				nsync += 1;
			}
		}

		if(nsync == count)
			break;
	}
	return rv;
}

void GUSIStdioClose() { GUSISfioFlushClose(true);  	}
void GUSIStdioFlush() { GUSISfioFlushClose(false);	}
@

Sfio already does everything to get started, no need for us to get in the act.
<<Implementation of internal GUSI functions for Sfio>>=
void GUSISetupConsoleStdio()
{
}
@ 

We need to use the sfio function for string formatting, not the stdio version.
<<Implementation of internal GUSI functions for Sfio>>=
int GUSI_vsprintf(char * s, const char * format, va_list args)
{
	return sfvsprintf(s, 4096, format, args);
}
@
